def projectVersion = "1.0-SNAPSHOT"
def projectGroup = "stroom"

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath group: 'gchq', name: 'urlDependencyPlugin', version: 'v0.1'
        classpath group: 'ca.cutterslade.gradle', name: 'gradle-dependency-analyze', version: '1.1.0'
    }
}

apply plugin: 'gchq.urldependencies'
apply plugin: 'idea'

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

ext.libsDir = "libs"

ext.versions = [
    dropwizard: '1.0.5',
    dropwizardMetrics: '3.1.2', //keep in sync with dropwizard
    slf4j: '1.7.21',
    logback: '1.1.8',
    hbase: '1.2.0', //CDH5.10 uses hbase 1.2.0
    //Curator 2.12.0 depends on zookeeper 3.4.8
    //HBase 1.2.0 depends on zookeeper 3.4.6
    //CDH5.10 uses zookeeper 3.4.5
    //It is not clear how a 3.4.6/3.4.8 ZK client will work against a 3.4.5 ZK quorum
    curator: '2.12.0',

    //0.10.2.0 is available but seems to have issues with spring_kafka_test
    kafka: '0.10.1.1', //CDH5.11 uses kafka 0.10.0+kafka2.1

    //1.1.1.RELEASE is the latest version that runs against kafka 0.10.0.1
    spring_kafka_test: '1.1.1.RELEASE',

    //same version for both stroom-query-api and stroom-query-common
    stroomQuery: 'v0.1.0',
    stroomExpression: 'v0.1.0'
]

//lib names for urlDependenciesPlugin
ext.urlLibs = [
    stroomQueryApi: "stroom-query-api-$versions.stroomQuery",
    stroomQueryCommon: "stroom-query-common-$versions.stroomQuery",
    stroomExpression: "stroom-expression-$versions.stroomExpression"
]

//3rd Party libs
ext.libs = [
    assertj: "org.assertj:assertj-core:3.6.2",
    byte_buddy: "net.bytebuddy:byte-buddy:1.5.8",
    commons_lang: "commons-lang:commons-lang:2.6",
    curator_client: "org.apache.curator:curator-client:$versions.curator",
    curator_framework: "org.apache.curator:curator-framework:$versions.curator",
    curator_recipies: "org.apache.curator:curator-recipes:$versions.curator",
    curator_service_discovery: "org.apache.curator:curator-x-discovery:$versions.curator",
    curator_test: "org.apache.curator:curator-test:$versions.curator",
    dropwizard_auth: "io.dropwizard:dropwizard-auth:$versions.dropwizard",
    dropwizard_auth_jwt: "com.github.toastshaman:dropwizard-auth-jwt:1.0.2-0",
    dropwizard_client: "io.dropwizard:dropwizard-client:$versions.dropwizard",
    dropwizard_core: "io.dropwizard:dropwizard-core:$versions.dropwizard",
    dropwizard_db: "io.dropwizard:dropwizard-db:$versions.dropwizard",
    dropwizard_hibernate: "io.dropwizard:dropwizard-hibernate:$versions.dropwizard",
    dropwizard_jersey: "io.dropwizard:dropwizard-jersey:$versions.dropwizard",
    dropwizard_jetty: "io.dropwizard:dropwizard-jetty:$versions.dropwizard",
    dropwizard_jobs_core: "de.spinscale.dropwizard:dropwizard-jobs-core:2.0.1",
    dropwizard_lifecycle: "io.dropwizard:dropwizard-lifecycle:$versions.dropwizard",
    dropwizard_metrics_annotation: "io.dropwizard.metrics:metrics-annotation:$versions.dropwizardMetrics",
    dropwizard_metrics_healthchecks: "io.dropwizard.metrics:metrics-healthchecks:$versions.dropwizardMetrics", 
    dropwizard_servlets: "io.dropwizard:dropwizard-servlets:$versions.dropwizard",
    dropwizard_testing: "io.dropwizard:dropwizard-testing:$versions.dropwizard",
    ehcache: "org.ehcache:ehcache:3.2.0",
    fastClasspathScanner: "io.github.lukehutch:fast-classpath-scanner:2.0.17",
    find_bugs: "com.google.code.findbugs:jsr305:1.3.9",
    guava: "com.google.guava:guava:19.0",
    guice: "com.google.inject:guice:4.0",
    hamcrest_core: "org.hamcrest:hamcrest-core:1.3",
    hbase_shaded_client: "org.apache.hbase:hbase-shaded-client:$versions.hbase",
    hibernate_core: "org.hibernate:hibernate-core:5.1.0.Final",
    hibernate_jpa_api: "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final",
    jCommander: "com.beust:jcommander:1.48",
    jackson_annotations: "com.fasterxml.jackson.core:jackson-annotations:2.7.8",
    javaslang: 'io.javaslang:javaslang:2.0.5',
    javassist: "org.javassist:javassist:3.20.0-GA",
    javax_inject: "javax.inject:javax.inject:1",
    javax_validation_api: "javax.validation:validation-api:1.1.0.Final",
    javax_ws_rs_api: "javax.ws.rs:javax.ws.rs-api:2.0.1",
    jcl_over_slf4j: "org.slf4j:jcl-over-slf4j:$versions.slf4j",
    jersey_server: "org.glassfish.jersey.core:jersey-server:2.23.2",
    jersey_client: "org.glassfish.jersey.core:jersey-client:2.23.2",
    joda_time: 'joda-time:joda-time:2.9.4',
    jose4j: "org.bitbucket.b_c:jose4j:0.5.2", //keep in sync with dropwizard_auth_jwt
    junit: "junit:junit:4.12", 
    kafka_clients: "org.apache.kafka:kafka-clients:$versions.kafka",
    kafka_streams: "org.apache.kafka:kafka-streams:$versions.kafka",
    kryo: "com.esotericsoftware:kryo-shaded:4.0.0",
    log4j_over_slf4j: "org.slf4j:log4j-over-slf4j:$versions.slf4j",
    logback_classic: "ch.qos.logback:logback-classic:$versions.logback",
    logback_core: "ch.qos.logback:logback-core:$versions.logback",
    mockito_core: "org.mockito:mockito-core:2.+",
    mysql_connector: "mysql:mysql-connector-java:5.1.40",
    objenesis: "org.objenesis:objenesis:2.2", //used with kryo so keep version in sync with that
    saxon: "net.sf.saxon:Saxon-HE:9.6.0-6",
    slf4j_api: "org.slf4j:slf4j-api:$versions.slf4j",
    spring_kafka_test: "org.springframework.kafka:spring-kafka-test:$versions.spring_kafka_test", //instead of spring_kafka_test could use 'org.apache.kafka:kafka-streams-examples'
    xml_apis: "xml-apis:xml-apis:1.0.b2",
    zookeeper: "org.apache.zookeeper:zookeeper:3.4.5",
] 


//apply from: "properties.gradle"

subprojects {
    apply plugin: 'java'
    apply plugin: 'ca.cutterslade.analyze'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    group "$projectGroup"
    version "$projectVersion"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenLocal()

        //Not currently using the cloudera hbase client as they don't publish a shaded version that can play nice
        //with dropwizard
        //maven {
            //url "http://repository.cloudera.com/artifactory/cloudera-repos/"
        //}
    }

    // This task lets us publish source. Useful for debugging.
    task sourceJar(type: Jar){
        from sourceSets.main.allJava
        classifier 'sources'
    }
}

urlDependencies {
    libs "${libsDir}"
    compile(urlLibs.stroomQueryApi,
            "https://github.com/gchq/stroom-query/releases/download/$versions.stroomQuery/${urlLibs.stroomQueryApi}.jar")
    compile(urlLibs.stroomQueryCommon,
            "https://github.com/gchq/stroom-query/releases/download/$versions.stroomQuery/${urlLibs.stroomQueryCommon}.jar")
    compile(urlLibs.stroomExpression,
            "https://github.com/gchq/stroom-expression/releases/download/$versions.stroomExpression/${urlLibs.stroomExpression}.jar")
}

project(':stroom-stats-service') {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId 'stats-service'
                from components.java
                artifact sourceJar
            }
        }
    }
}

project(':stroom-stats-api') {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId 'stats-api'
                from components.java
                artifact sourceJar
            }
        }
    }
}

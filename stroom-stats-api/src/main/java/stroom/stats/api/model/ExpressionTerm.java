/*
 * Stroom Stats API
 * APIs for interacting with Stroom Stats.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package stroom.stats.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import stroom.stats.api.model.DocRef;
import stroom.stats.api.model.ExpressionItem;

/**
 * ExpressionTerm
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-19T13:37:48.590Z")
public class ExpressionTerm extends ExpressionItem {
  @SerializedName("field")
  private String field = null;

  /**
   * The condition of the predicate term
   */
  public enum ConditionEnum {
    @SerializedName("CONTAINS")
    CONTAINS("CONTAINS"),
    
    @SerializedName("EQUALS")
    EQUALS("EQUALS"),
    
    @SerializedName("GREATER_THAN")
    GREATER_THAN("GREATER_THAN"),
    
    @SerializedName("GREATER_THAN_OR_EQUAL_TO")
    GREATER_THAN_OR_EQUAL_TO("GREATER_THAN_OR_EQUAL_TO"),
    
    @SerializedName("LESS_THAN")
    LESS_THAN("LESS_THAN"),
    
    @SerializedName("LESS_THAN_OR_EQUAL_TO")
    LESS_THAN_OR_EQUAL_TO("LESS_THAN_OR_EQUAL_TO"),
    
    @SerializedName("BETWEEN")
    BETWEEN("BETWEEN"),
    
    @SerializedName("IN")
    IN("IN"),
    
    @SerializedName("IN_DICTIONARY")
    IN_DICTIONARY("IN_DICTIONARY");

    private String value;

    ConditionEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("condition")
  private ConditionEnum condition = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("dictionary")
  private DocRef dictionary = null;

  public ExpressionTerm field(String field) {
    this.field = field;
    return this;
  }

   /**
   * The name of the field that is being evaluated in this predicate term
   * @return field
  **/
  @ApiModelProperty(example = "null", required = true, value = "The name of the field that is being evaluated in this predicate term")
  public String getField() {
    return field;
  }

  public void setField(String field) {
    this.field = field;
  }

  public ExpressionTerm condition(ConditionEnum condition) {
    this.condition = condition;
    return this;
  }

   /**
   * The condition of the predicate term
   * @return condition
  **/
  @ApiModelProperty(example = "null", required = true, value = "The condition of the predicate term")
  public ConditionEnum getCondition() {
    return condition;
  }

  public void setCondition(ConditionEnum condition) {
    this.condition = condition;
  }

  public ExpressionTerm value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value that the field value is being evaluated against. Not required if a dictionary is supplied
   * @return value
  **/
  @ApiModelProperty(example = "null", value = "The value that the field value is being evaluated against. Not required if a dictionary is supplied")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ExpressionTerm dictionary(DocRef dictionary) {
    this.dictionary = dictionary;
    return this;
  }

   /**
   * The DocRef for the dictionary that this predicate is using for its evaluation
   * @return dictionary
  **/
  @ApiModelProperty(example = "null", required = true, value = "The DocRef for the dictionary that this predicate is using for its evaluation")
  public DocRef getDictionary() {
    return dictionary;
  }

  public void setDictionary(DocRef dictionary) {
    this.dictionary = dictionary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpressionTerm expressionTerm = (ExpressionTerm) o;
    return Objects.equals(this.field, expressionTerm.field) &&
        Objects.equals(this.condition, expressionTerm.condition) &&
        Objects.equals(this.value, expressionTerm.value) &&
        Objects.equals(this.dictionary, expressionTerm.dictionary) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, condition, value, dictionary, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpressionTerm {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    dictionary: ").append(toIndentedString(dictionary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


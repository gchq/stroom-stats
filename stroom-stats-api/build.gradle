//plugins {
    //id 'com.github.jacobono.jaxb' version '1.3.6'
//}
plugins {
    id "de.undercouch.download" version "3.2.0"
}

apply plugin: 'com.github.jacobono.jaxb'

dependencies { 
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'
}


def xmlSchemas = [
    v3: 'https://raw.githubusercontent.com/gchq/stroom-content/statsSchemaV3/source/core-xml-schemas/stroomContent/XML%20Schemas/statistics/statistics%20v3.0.XMLSchema.data.xsd'

]

def schemasDir = "${buildDir}/schemas"
logger.info("Creating dir----------------------------")

new File(schemasDir).mkdirs()
download {
    src  'https://raw.githubusercontent.com/gchq/stroom-content/statsSchemaV3/source/core-xml-schemas/stroomContent/XML%20Schemas/statistics/statistics%20v3.0.XMLSchema.data.xsd'
    dest new File("${schemasDir}/schema.xsd")
    overwrite true
}

//task downloadXmlSchemas() {
    //doLast {
        ////ensure dir exists
        //new File(schemasDir).mkdirs()

        //xmlSchemas.each { ver, url -> 
            //new File("${schemasDir}/${ver}").mkdirs()

            //download {
                //src url
                //dest new File("${schemasDir}/${ver}/schema.xsd")
                //overwrite true
            //}
        //}
    //}
//}

//task buildAllJaxbArtefacts() {
//}


//task createJaxbTasks() {
    ////configure a task for each schema we need to process
    //xmlSchemas.each { ver, url -> 
        //def taskName = "buildJaxbArtefacts${ver}" 
        //logger.info("Configuring dynamic task ${taskName}")
        ////task "$taskName" (type: com.github.jacobono.jaxb) {
        ////task "$taskName" (type: jaxb) {
        //task "$taskName" () {
            ////dependsOn downloadXmlSchemas

            //doLast {
                //logger.info("Running xjc for schhema $ver")

                ////ensure dir exists
                //new File(schemasDir).mkdirs()

                //download {
                    //src url
                    //dest new File("${schemasDir}/schema.xsd")
                    //overwrite true
                //}

                //jaxb() {

                    //xsdDir = "${schemasDir}"
                    ////task "xjc-$ver" (type: org.gradle.jacobo.plugins.task.JaxbXjc) {
                    //xjc {
                        //logger.info("....Running xjc for schhema $ver")
                        //generatePackage = "stroom.stats.schema.${ver}"
                        //args = [
                        //]
                    //}
                //}
            //}
        //}
        ////buildAllJaxbArtefacts.dependsOn "$taskName"
        //tasks.compileJava.dependsOn "$taskName"
    //}
//}

//tasks.compileJava.dependsOn buildAllJaxbArtefacts

jaxb() {

    xsdDir = "${schemasDir}"
    xjc {
        generatePackage = "stroom.stats.schema.vX"
        args = [
        ]
    }
}

---
swagger: "2.0"
info:
  description: "APIs for interacting with Stroom Stats."
  version: "v1"
  title: "Stroom Stats API"
  contact:
    name: "GCHQ"
    url: "https://github.com/gchq/stroom-stats"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
- name: "Query"
schemes:
- "http"
- "https"
paths:
  /api/stroom-stats/v2/dataSource:
    post:
      tags:
      - "Query"
      summary: "Get data source for a DocRef"
      description: ""
      operationId: "getDataSource"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DataSource"
  /api/stroom-stats/v2/search:
    post:
      tags:
      - "Query"
      summary: "Execute a stats search"
      description: ""
      operationId: "search"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponse"
definitions:
  DataSource:
    type: "object"
    required:
    - "fields"
    properties:
      fields:
        type: "array"
        xml:
          wrapped: true
        items:
          xml:
            name: "field"
          $ref: "#/definitions/DataSourceField"
    description: "The definition of a data source, describing the fields available"
    xml:
      name: "dataSource"
  DataSourceField:
    type: "object"
    required:
    - "conditions"
    - "name"
    - "queryable"
    - "type"
    properties:
      type:
        type: "string"
        description: "The data type for the field"
        enum:
        - "FIELD"
        - "NUMERIC_FIELD"
        - "DATE_FIELD"
        - "ID"
      name:
        type: "string"
        example: "field1"
        description: "The name of the field"
      queryable:
        type: "boolean"
        example: true
        description: "Whether the field can be used in predicate in a query"
      conditions:
        type: "array"
        xml:
          wrapped: true
        description: "The supported predicate conditions for this field"
        items:
          type: "string"
          xml:
            name: "condition"
          enum:
          - "CONTAINS"
          - "EQUALS"
          - "GREATER_THAN"
          - "GREATER_THAN_OR_EQUAL_TO"
          - "LESS_THAN"
          - "LESS_THAN_OR_EQUAL_TO"
          - "BETWEEN"
          - "IN"
          - "IN_DICTIONARY"
    description: "The definition of a field within a data source"
  DateTimeFormat:
    type: "object"
    required:
    - "pattern"
    - "timeZone"
    properties:
      pattern:
        type: "string"
        description: "A date time formatting pattern string conforming to the specification\
          \ of java.time.format.DateTimeFormatter"
      timeZone:
        $ref: "#/definitions/TimeZone"
    description: "The string formatting to apply to a date value"
  Field:
    type: "object"
    required:
    - "expression"
    properties:
      name:
        type: "string"
        description: "The name of the field for display purposes"
      expression:
        type: "string"
        example: "SUM(${count})"
        description: "The expression to use to generate the value for this field"
      sort:
        $ref: "#/definitions/Sort"
      filter:
        $ref: "#/definitions/Filter"
      format:
        $ref: "#/definitions/Format"
      group:
        type: "integer"
        format: "int32"
        description: "If this field is to be grouped then this defines the level of\
          \ grouping, with 0 being the top level of grouping, 1 being the next level\
          \ down, etc."
    description: "Describes a field in a result set. The field can have various expressions\
      \ applied to it, e.g. SUM(), along with sorting, filtering, formatting and grouping"
  Filter:
    type: "object"
    properties:
      includes:
        type: "string"
        example: "^[0-9]{3}$"
        description: "Only results matching this filter will be included"
      excludes:
        type: "string"
        example: "^[0-9]{3}$"
        description: "Only results NOT matching this filter will be included"
    description: "A pair of regular expression filters (inclusion and exclusion) to\
      \ apply to the field.  Either or both can be supplied"
  FlatResult:
    allOf:
    - $ref: "#/definitions/Result"
    - type: "object"
      properties:
        structure:
          type: "array"
          items:
            $ref: "#/definitions/Field"
        values:
          type: "array"
          description: "The 2 dimensional array containing the result set. The positions\
            \ in the inner array correspond to the positions in the 'structure' property"
          items:
            type: "array"
            items:
              type: "object"
        size:
          type: "integer"
          format: "int64"
          description: "The size of the result set being returned"
      description: "A result structure used primarily for visualisation data"
  Format:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
        example: "NUMBER"
        description: "The formatting type to apply"
        enum:
        - "GENERAL"
        - "NUMBER"
        - "DATE_TIME"
        - "TEXT"
      numberFormat:
        $ref: "#/definitions/NumberFormat"
      dateTimeFormat:
        $ref: "#/definitions/DateTimeFormat"
    description: "Describes the formatting that will be applied to values in a field"
  NumberFormat:
    type: "object"
    required:
    - "decimalPlaces"
    properties:
      decimalPlaces:
        type: "integer"
        format: "int32"
        example: 2
        description: "The number of decimal places"
      useSeparator:
        type: "boolean"
        example: true
        description: "Whether to use a thousands separator or not. Defaults to false"
    description: "The definition of a format to apply to numeric data"
  OffsetRange:
    type: "object"
    required:
    - "length"
    - "offset"
    properties:
      offset:
        type: "integer"
        format: "int64"
        example: 0
        description: "The start offset for this sub-set of data, where zero is the\
          \ offset of the first record in the full result set"
      length:
        type: "integer"
        format: "int64"
        example: 100
        description: "The length in records of the sub-set of results"
    description: "The offset and length of a range of data in a sub-set of a query\
      \ result set"
  Result:
    type: "object"
    required:
    - "componentId"
    discriminator: "type"
    properties:
      componentId:
        type: "string"
        description: "The ID of the component that this result set was requested for.\
          \ See ResultRequest in SearchRequest"
      error:
        type: "string"
        description: "If an error has occurred producing this result set then this\
          \ will have details of the error"
    description: "Base object for describing a set of result data"
  Row:
    type: "object"
    required:
    - "depth"
    - "groupKey"
    - "values"
    properties:
      groupKey:
        type: "string"
        description: "TODO"
      values:
        type: "array"
        xml:
          wrapped: true
        description: "The value for this row of data. The values in the list are in\
          \ the same order as the fields in the ResultRequest"
        items:
          type: "string"
          xml:
            name: "value"
      depth:
        type: "integer"
        format: "int32"
        example: 0
        description: "The grouping depth, where 0 is the top level of grouping, or\
          \ where there is no grouping"
    description: "A row of data in a result set"
  SearchResponse:
    type: "object"
    required:
    - "highlights"
    properties:
      highlights:
        type: "array"
        xml:
          wrapped: true
        description: "A list of strings to highlight in the UI that should correlate\
          \ with the search query."
        items:
          type: "string"
          xml:
            name: "highlight"
      results:
        type: "array"
        xml:
          wrapped: true
        items:
          $ref: "#/definitions/Result"
      errors:
        type: "array"
        xml:
          wrapped: true
        description: "A list of errors that occurred in running the query"
        items:
          type: "string"
          xml:
            name: "error"
      complete:
        type: "boolean"
        description: "True if the query has returned all known results"
    description: "The response to a search request, that may or may not contain results.\
      \ The results may only be a partial set if an iterative screech was requested"
    xml:
      name: "searchResponse"
  Sort:
    type: "object"
    required:
    - "direction"
    - "order"
    properties:
      order:
        type: "integer"
        format: "int32"
        example: 0
        description: "Where multiple fields are sorted this value describes the sort\
          \ order, with 0 being the first field to sort on"
      direction:
        type: "string"
        example: "ASCENDING"
        description: "The direction to sort in, ASCENDING or DESCENDING"
        enum:
        - "ASCENDING"
        - "DESCENDING"
    description: "Describes the sorting applied to a field"
  TableResult:
    allOf:
    - $ref: "#/definitions/Result"
    - type: "object"
      required:
      - "resultRange"
      - "rows"
      properties:
        rows:
          type: "array"
          items:
            $ref: "#/definitions/Row"
        resultRange:
          $ref: "#/definitions/OffsetRange"
        totalResults:
          type: "integer"
          format: "int32"
          description: "The total number of results in this result set"
      description: "Object for describing a set of results in a table form that supports\
        \ grouped data"
  TimeZone:
    type: "object"
    required:
    - "use"
    properties:
      use:
        type: "string"
        description: "The required type of time zone"
        enum:
        - "LOCAL"
        - "UTC"
        - "ID"
        - "OFFSET"
      id:
        type: "string"
        example: "GMT"
        description: "The id of the time zone, conforming to java.time.ZoneId"
      offsetHours:
        type: "integer"
        format: "int32"
        example: -1
        description: "The number of hours this timezone is offset from UTC"
      offsetMinutes:
        type: "integer"
        format: "int32"
        example: -30
        description: "The number of minutes this timezone is offset from UTC"
    description: "The timezone to apply to a date time value"

plugins {
    id 'com.github.jacobono.jaxb' version '1.3.5'
    id "de.undercouch.download" version "3.2.0"
}

dependencies { 
    jaxb libs.jaxb_xjc
    jaxb libs.jaxb_runtime
}

def xmlSchemas = [
    v3: 'https://raw.githubusercontent.com/gchq/stroom-content/statsSchemaV3/source/core-xml-schemas/stroomContent/XML%20Schemas/statistics/statistics%20v3.0.XMLSchema.data.xsd'
]

def schemasDir = "${buildDir}/schemas"
def generatedDir = "src-generated"

sourceSets.main.java.srcDir new File(projectDir, 'src-generated/main/java')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('src-generated/main/java')
    }
}

clean {
    delete 'src-generated'
}

task downloadSchemas() {
    doLast {
        new File(schemasDir).mkdirs()

        download {
            src xmlSchemas.v3
            dest new File("${schemasDir}")
            overwrite true
        }
    }
}


//TODO code below was an attempt to download multiple schemas but this relies on being able to
//configure and run the jaxb plugin twice
//task downloadXmlSchemas() {
    //doLast {
        ////ensure dir exists
        //new File(schemasDir).mkdirs()

        //xmlSchemas.each { ver, url -> 
            //new File("${schemasDir}/${ver}").mkdirs()

            //download {
                //src url
                //dest new File("${schemasDir}/${ver}/schema.xsd")
                //overwrite true
            //}
        //}
    //}
//}

//TODO code below was an attempt to get the jaxb plugin to generate code for multiple schemas
//not worth completing until we have multiple schemas to process
//task createJaxbTasks() {
    ////configure a task for each schema we need to process
    //xmlSchemas.each { ver, url -> 
        //def taskName = "buildJaxbArtefacts${ver}" 
        //logger.info("Configuring dynamic task ${taskName}")
        ////task "$taskName" (type: com.github.jacobono.jaxb) {
        ////task "$taskName" (type: jaxb) {
        //task "$taskName" () {
            ////dependsOn downloadXmlSchemas

            //doLast {
                //logger.info("Running xjc for schhema $ver")

                ////ensure dir exists
                //new File(schemasDir).mkdirs()

                //download {
                    //src url
                    //dest new File("${schemasDir}/schema.xsd")
                    //overwrite true
                //}

                //jaxb() {

                    //xsdDir = "${schemasDir}"
                    ////task "xjc-$ver" (type: org.gradle.jacobo.plugins.task.JaxbXjc) {
                    //xjc {
                        //logger.info("....Running xjc for schhema $ver")
                        //generatePackage = "stroom.stats.schema.${ver}"
                        //args = [
                        //]
                    //}
                //}
            //}
        //}
        ////buildAllJaxbArtefacts.dependsOn "$taskName"
        //tasks.compileJava.dependsOn "$taskName"
    //}
//}


//configuration for the jaxb plugin
jaxb() {
    xsdDir = "${project.name}/build/schemas"
    xjc {
        destinationDir = "${generatedDir}/main/java"
        generatePackage = "stroom.stats.schema.v3"
        args = [
        ]
    }
}

tasks.xjc.dependsOn downloadSchemas
tasks.compileJava.dependsOn xjc
